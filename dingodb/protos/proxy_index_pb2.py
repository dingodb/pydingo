# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proxy_index.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import proxy_common_pb2 as proxy__common__pb2
import proxy_error_pb2 as proxy__error__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11proxy_index.proto\x12\x16\x64ingodb.pb.proxy.index\x1a\x12proxy_common.proto\x1a\x11proxy_error.proto\"\x9f\x01\n\x10VectorAddRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\x12\x36\n\x07vectors\x18\x03 \x03(\x0b\x32%.dingodb.pb.proxy.common.VectorWithId\x12\x17\n\x0freplace_deleted\x18\x04 \x01(\x08\x12\x11\n\tis_update\x18\x05 \x01(\x08\"y\n\x11VectorAddResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12\x36\n\x07vectors\x18\x02 \x03(\x0b\x32%.dingodb.pb.proxy.common.VectorWithId\"\xbc\x01\n\x10VectorGetRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\x12\x12\n\nvector_ids\x18\x03 \x03(\x04\x12\x1b\n\x13without_vector_data\x18\x04 \x01(\x08\x12\x1b\n\x13without_scalar_data\x18\x05 \x01(\x08\x12\x15\n\rselected_keys\x18\x06 \x03(\t\x12\x1a\n\x12without_table_data\x18\x07 \x01(\x08\"y\n\x11VectorGetResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12\x36\n\x07vectors\x18\x02 \x03(\x0b\x32%.dingodb.pb.proxy.common.VectorWithId\"\xb9\x01\n\x13VectorSearchRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\x12\x36\n\x07vectors\x18\x03 \x03(\x0b\x32%.dingodb.pb.proxy.common.VectorWithId\x12\x41\n\tparameter\x18\x04 \x01(\x0b\x32..dingodb.pb.proxy.common.VectorSearchParameter\"f\n\x18VectorWithDistanceResult\x12J\n\x15vector_with_distances\x18\x01 \x03(\x0b\x32+.dingodb.pb.proxy.common.VectorWithDistance\"\x8d\x01\n\x14VectorSearchResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12G\n\rbatch_results\x18\x02 \x03(\x0b\x32\x30.dingodb.pb.proxy.index.VectorWithDistanceResult\"K\n\x13VectorDeleteRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\x12\x0b\n\x03ids\x18\x03 \x03(\x04\"X\n\x14VectorDeleteResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12\x12\n\nkey_states\x18\x02 \x03(\x08\"T\n\x18VectorGetBorderIdRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\x12\x0f\n\x07get_min\x18\x03 \x01(\x08\"U\n\x19VectorGetBorderIdResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12\n\n\x02id\x18\x02 \x01(\x04\"\xf0\x02\n\x16VectorScanQueryRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\x12\x17\n\x0fvector_id_start\x18\x03 \x01(\x04\x12\x17\n\x0fis_reverse_scan\x18\x04 \x01(\x08\x12\x16\n\x0emax_scan_count\x18\x05 \x01(\x04\x12\x15\n\rvector_id_end\x18\x06 \x01(\x04\x12\x1b\n\x13without_vector_data\x18\x0b \x01(\x08\x12\x1b\n\x13without_scalar_data\x18\x0c \x01(\x08\x12\x15\n\rselected_keys\x18\r \x03(\t\x12\x1a\n\x12without_table_data\x18\x0e \x01(\x08\x12\x19\n\x11use_scalar_filter\x18\x14 \x01(\x08\x12\x44\n\x11scalar_for_filter\x18\x15 \x01(\x0b\x32).dingodb.pb.proxy.common.VectorScalarData\"\x7f\n\x17VectorScanQueryResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12\x36\n\x07vectors\x18\x02 \x03(\x0b\x32%.dingodb.pb.proxy.common.VectorWithId\"H\n\x1dVectorGetRegionMetricsRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\"\x8c\x01\n\x1eVectorGetRegionMetricsResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12<\n\x07metrics\x18\x02 \x01(\x0b\x32+.dingodb.pb.proxy.common.VectorIndexMetrics\"=\n\x12VectorCountRequest\x12\x13\n\x0bschema_name\x18\x01 \x01(\t\x12\x12\n\nindex_name\x18\x02 \x01(\t\"R\n\x13VectorCountResponse\x12,\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1d.dingodb.pb.proxy.error.Error\x12\r\n\x05\x63ount\x18\x02 \x01(\x04\x32\x88\x07\n\x0cIndexService\x12`\n\tVectorAdd\x12(.dingodb.pb.proxy.index.VectorAddRequest\x1a).dingodb.pb.proxy.index.VectorAddResponse\x12`\n\tVectorGet\x12(.dingodb.pb.proxy.index.VectorGetRequest\x1a).dingodb.pb.proxy.index.VectorGetResponse\x12i\n\x0cVectorSearch\x12+.dingodb.pb.proxy.index.VectorSearchRequest\x1a,.dingodb.pb.proxy.index.VectorSearchResponse\x12i\n\x0cVectorDelete\x12+.dingodb.pb.proxy.index.VectorDeleteRequest\x1a,.dingodb.pb.proxy.index.VectorDeleteResponse\x12x\n\x11VectorGetBorderId\x12\x30.dingodb.pb.proxy.index.VectorGetBorderIdRequest\x1a\x31.dingodb.pb.proxy.index.VectorGetBorderIdResponse\x12r\n\x0fVectorScanQuery\x12..dingodb.pb.proxy.index.VectorScanQueryRequest\x1a/.dingodb.pb.proxy.index.VectorScanQueryResponse\x12\x87\x01\n\x16VectorGetRegionMetrics\x12\x35.dingodb.pb.proxy.index.VectorGetRegionMetricsRequest\x1a\x36.dingodb.pb.proxy.index.VectorGetRegionMetricsResponse\x12\x66\n\x0bVectorCount\x12*.dingodb.pb.proxy.index.VectorCountRequest\x1a+.dingodb.pb.proxy.index.VectorCountResponseB\x1b\n\x16io.dingodb.proxy.index\x88\x01\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'proxy_index_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\026io.dingodb.proxy.index\210\001\001'
  _globals['_VECTORADDREQUEST']._serialized_start=85
  _globals['_VECTORADDREQUEST']._serialized_end=244
  _globals['_VECTORADDRESPONSE']._serialized_start=246
  _globals['_VECTORADDRESPONSE']._serialized_end=367
  _globals['_VECTORGETREQUEST']._serialized_start=370
  _globals['_VECTORGETREQUEST']._serialized_end=558
  _globals['_VECTORGETRESPONSE']._serialized_start=560
  _globals['_VECTORGETRESPONSE']._serialized_end=681
  _globals['_VECTORSEARCHREQUEST']._serialized_start=684
  _globals['_VECTORSEARCHREQUEST']._serialized_end=869
  _globals['_VECTORWITHDISTANCERESULT']._serialized_start=871
  _globals['_VECTORWITHDISTANCERESULT']._serialized_end=973
  _globals['_VECTORSEARCHRESPONSE']._serialized_start=976
  _globals['_VECTORSEARCHRESPONSE']._serialized_end=1117
  _globals['_VECTORDELETEREQUEST']._serialized_start=1119
  _globals['_VECTORDELETEREQUEST']._serialized_end=1194
  _globals['_VECTORDELETERESPONSE']._serialized_start=1196
  _globals['_VECTORDELETERESPONSE']._serialized_end=1284
  _globals['_VECTORGETBORDERIDREQUEST']._serialized_start=1286
  _globals['_VECTORGETBORDERIDREQUEST']._serialized_end=1370
  _globals['_VECTORGETBORDERIDRESPONSE']._serialized_start=1372
  _globals['_VECTORGETBORDERIDRESPONSE']._serialized_end=1457
  _globals['_VECTORSCANQUERYREQUEST']._serialized_start=1460
  _globals['_VECTORSCANQUERYREQUEST']._serialized_end=1828
  _globals['_VECTORSCANQUERYRESPONSE']._serialized_start=1830
  _globals['_VECTORSCANQUERYRESPONSE']._serialized_end=1957
  _globals['_VECTORGETREGIONMETRICSREQUEST']._serialized_start=1959
  _globals['_VECTORGETREGIONMETRICSREQUEST']._serialized_end=2031
  _globals['_VECTORGETREGIONMETRICSRESPONSE']._serialized_start=2034
  _globals['_VECTORGETREGIONMETRICSRESPONSE']._serialized_end=2174
  _globals['_VECTORCOUNTREQUEST']._serialized_start=2176
  _globals['_VECTORCOUNTREQUEST']._serialized_end=2237
  _globals['_VECTORCOUNTRESPONSE']._serialized_start=2239
  _globals['_VECTORCOUNTRESPONSE']._serialized_end=2321
  _globals['_INDEXSERVICE']._serialized_start=2324
  _globals['_INDEXSERVICE']._serialized_end=3228
# @@protoc_insertion_point(module_scope)
